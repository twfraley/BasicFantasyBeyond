@using BasicFantasyBeyond.Models.CharacterModels
@model BasicFantasyBeyond.Models.CharacterSheetModels.CharacterSheetModel

@{
    ViewBag.Title = "Details";
}
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.CharacterSheetID)
<p></p>

<h2>@Html.DisplayFor(model => model.CharacterName)</h2>

<div>
    <h4>Details</h4>
    <hr />
    <div class="container container-fluid border">
        <div class=" row ">
            <div id="characterAttributes" class="col col-lg-4 col-md-6 col-sm-12 border">
                <div class="row bg-dark text-light">
                    <div class="col-12 lead text-center">
                        Primary Attributes
                    </div>
                </div>
                <div class=" row ">
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                Strength
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterStr)
                                (@Html.DisplayFor(model => model.StrMod)
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                Dexterity
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterDex)
                                (@Html.DisplayFor(model => model.DexMod)
                                )
                            </div>
                        </div>
                    </div>
                </div>
                <div class=" row ">
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Constitution
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterCon)
                                (@Html.DisplayFor(model => model.ConMod)
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Intelligence
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterInt)
                                (@Html.DisplayFor(model => model.IntMod)
                                )
                            </div>
                        </div>
                    </div>
                </div>
                <div class=" row ">
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                Wisdom
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterWis)
                                (@Html.DisplayFor(model => model.WisMod)
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Charisma
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterCha)
                                (@Html.DisplayFor(model => model.ChaMod)
                                )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="characterStats" class="col col-lg-4 col-md-6 col-sm-12 border">
                <div class="row bg-dark text-light">
                    <div class="col-12 lead text-center">
                        Character Stats
                    </div>
                </div>
                <div class=" row ">
                    <div class="col col-6 text-center border lead">

                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Armor Class
                            </div>
                        </div>
                        <div class=" row border-bottom pb-3 bg-white">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterAC)
                            </div>
                        </div>
                    </div>


                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Attack Bonus
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterAttackBonus)
                            </div>
                        </div>
                    </div>
                </div>
                <div class=" row ">
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                Hit Points
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @{
                                    if (Model.CharacterHP == null || Model.CharacterHP == 0)
                                    {
                                        @Html.ActionLink("Add HP", "Edit", "Character", new { id = Model.CharacterID }, new { @class = "lead" })
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.CharacterHP)
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                Speed:
                            </div>
                        </div>
                        <div class=" row border-bottom bg-white pb-3">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterSpeed)
                            </div>
                        </div>
                    </div>

                </div>
                <div class=" row bg-light">
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom ">
                            <div class=" col-12 ">
                                XP
                            </div>
                        </div>
                        <div class=" row border-bottom pb-3 bg-white">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterXP)
                            </div>
                        </div>
                    </div>
                    <div class="col col-6 text-center border lead">
                        <div class="row bg-light border-bottom">
                            <div class=" col-12 ">
                                Level:
                            </div>
                        </div>
                        <div class=" row border-bottom pb-3 bg-white">
                            <div class="col-12">
                                @Html.DisplayFor(model => model.CharacterLevel)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="characterDetails" class="col col-lg-4 col-md-6 col-sm-12 border">
                <div class="row bg-dark text-light lead">
                    <div class=" col-12">
                        Character Details
                    </div>
                </div>
                <div class=" row col-12 lead">
                    <div class="row col-12 bg-light border-bottom">
                        Name:
                    </div>
                    <div class="row col-12 border-bottom bg-white">
                        @Html.DisplayFor(model => model.CharacterName)
                    </div>
                </div>
                <div class=" row col-12 lead mb-2 mt-2"></div>
                <div class=" row col-12 lead">
                    <div class="row col-12 bg-light border-bottom">
                        Race:
                    </div>
                    <div class="row col-12 border-bottom bg-white">
                        @Html.DisplayFor(model => model.CharacterRace)
                    </div>
                </div>
                <div class=" row col-12 lead mb-2 mt-2"></div>
                <div class=" row col-12 lead">
                    <div class="row col-12 bg-light border-bottom">
                        Class:
                    </div>
                    <div class="row col-12 border-bottom bg-white">
                        @Html.DisplayFor(model => model.CharacterClass)
                    </div>
                </div>

            </div>
        </div>
    </div>

    <hr />

    <div class="container container-fluid">
        <div class="row">
            <div class="col col-12">
                <div class="row bg-dark text-light lead px-4">
                    Special Abilities:
                </div>
                <div class="row small-font">
                    <ul>
                        @{

                            if (Model.CharacterRace == CharacterRace.Dwarf)
                            {
                                <li>
                                    @Html.Raw("All Dwarves have Darkvision with a 60' range.")
                                </li>
                                <li>
                                    @Html.Raw("Dwarves are able to detect slanting passages, traps, shifting walls and new construction on a roll of 1-2 on 1d6; a search must be performed before this roll may be made.")
                                </li>
                            }
                            if (Model.CharacterRace == CharacterRace.Elf)
                            {
                                <li>
                                    @Html.Raw("All Elves have Darkvision with a 60' range.")
                                </li>
                                <li>
                                    @Html.Raw("Elves are able to find secret doors more often than normal (1-2 on 1d6 rather than the usual 1 on 1d6). An Elf is so observant that one has a 1 on 1d6 chance to find a secret door with a cursory look.")
                                </li>
                                <li>
                                    @Html.Raw("Elves are immune to the paralyzing attack of ghouls.")
                                </li>
                                <li>
                                    @Html.Raw("Elves are less likely to be surprised in combat, reducing the chance of surprise by 1 in 1d6.")
                                </li>
                            }
                            if (Model.CharacterRace == CharacterRace.Halfling)
                            {
                                <li>
                                    @Html.Raw("Halflings are unusually accurate with all sorts of ranged weapons, gaining a + 1 attack bonus when employing them. (included in calculation)")
                                </li>
                                <li>
                                    @Html.Raw("When attacked in melee by creatures larger than man - sized, Halflings gain a + 2 bonus to their Armor Class.")
                                </li>
                                <li>
                                    @Html.Raw("Halflings are quick - witted, thus adding + 1 to Initiative die rolls.")
                                </li>
                                <li>
                                    @Html.Raw("Outdoors in their preferred forest terrain, they are able to hide very effectively; so long as they remain still there is only a 10 % chance they will be detected. Even indoors, in dungeons or in non - preferred terrain they are able to hide such that there is only a 30 % chance of detection. Note that a Halfling Thief will roll only once, using either the Thief ability or the Halfling ability, whichever is better.")
                                </li>
                            }
                            if (Model.CharacterRace == CharacterRace.Human)
                            {
                                <li>
                                    @Html.Raw("Humans learn unusually quickly, gaining a bonus of 10 % to all experience points earned.")
                                </li>
                            }
                            if (Model.CharacterClass == CharacterClass.Cleric)
                            {
                                <li>
                                    @Html.Raw("Clerics have the ability to turn undead. (see pg. 49)")
                                </li>
                            }
                        }
                    </ul>
                </div>

            </div>
        </div>
    </div>

    <hr />

    <div class="container container-fluid ">
        <div class="row">
            <div class="col-12 lead">
                Equipped Weapons:
            </div>
        </div>
        <div class="row text-light bg-dark">
            <div class="col col-3 text-center lead">
                Item Name
            </div>
            <div class="col col-2 text-center lead">
                To-Hit
            </div>
            <div class="col col-2 text-center lead">
                Damage
            </div>
            <div class="col col-2 text-center lead">
                Special
            </div>
            <div class="col col-3 text-center lead">
                Manage
            </div>
        </div>
        @{
            foreach (var item in Model.EquippedWeapons)
            {
                @Html.HiddenFor(i => item.CharacterItemID)
                <div class="row bg-light border-bottom small-font">
                    <div class="col col-3 text-center ">
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.AttackBonus)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.Damage)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(i => item.ItemNotes)
                    </div>
                    <div class="col col-3 btn-group-sm rounded-0 text-center">
                        <div class="btn btn-sm btn-light rounded-0">
                            @Html.ActionLink("Unequip", "Unequip", new { id = item.CharacterItemID, characterID = Model.CharacterID }, new { @class = "text-decoration-none text-dark" })
                        </div>
                        <div class="btn btn-sm btn-light rounded-0">
                            @Html.ActionLink("Delete", "Delete", new { characterID = Model.CharacterID, characterItemID = item.CharacterItemID }, new { @class = "text-decoration-none text-dark" })
                        </div>
                    </div>

                </div>
            }
        }

    </div>

    <hr />
    <div class="container container-fluid border-danger">
        <div class="row">
            <div class="col-12 lead">
                Equipped Armor:
            </div>
        </div>
        <div class="row text-light bg-dark">
            <div class="col col-4 text-center lead">
                Item Name
            </div>
            <div class="col col-2 text-center lead">
                AC Bonus
            </div>
            <div class="col col-3 text-center lead">
                Special
            </div>
            <div class="col col-3 text-center lead">
                Manage
            </div>
        </div>
        @{
            foreach (var item in Model.EquippedArmor)
            {
                @Html.HiddenFor(i => item.CharacterItemID)
                <div class="row bg-light border-bottom small-font">
                    <div class="col col-4 text-center ">
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.ArmorClassBonus)
                    </div>
                    <div class="col col-3 text-center ">
                        @Html.DisplayFor(modelItem => item.ItemNotes)
                    </div>
                    <div class="col col-3 btn-group-sm rounded-0 text-center">
                        <div class="btn btn-sm btn-light rounded-0">
                            @Html.ActionLink("Unequip", "Unequip", new { id = item.CharacterItemID, characterID = Model.CharacterID }, new { @class = "text-decoration-none text-dark" })
                        </div>
                        <div class="btn btn-sm btn-light rounded-0">
                            @Html.ActionLink("Delete", "Delete", new { characterID = Model.CharacterID, characterItemID = item.CharacterItemID }, new { @class = "text-decoration-none text-dark" })
                        </div>
                    </div>

                </div>
            }
        }

    </div>

    <hr />
    <div class="container container-fluid border-danger">
        <div class="row">
            <div class="col-12 lead">
                All Items:
            </div>
        </div>
        <div class="row text-light bg-dark">
            <div class="col col-2 text-center lead">
                Item Name
            </div>
            <div class="col col-2 text-center lead">
                Item Type
            </div>
            <div class="col col-2 text-center lead">
                Damage
            </div>
            <div class="col col-2 text-center lead">
                AC Bonus
            </div>
            <div class="col col-2 text-center lead">
                Special
            </div>
            <div class="col col-2 text-center lead">
                Manage
            </div>
        </div>
        @{
            foreach (var item in Model.Items)
            {
                @Html.HiddenFor(i => item.CharacterItemID)
                <div class="row bg-light border-bottom small-font">
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.ItemType)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.Damage)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(modelItem => item.ArmorClassBonus)
                    </div>
                    <div class="col col-2 text-center ">
                        @Html.DisplayFor(i => item.ItemNotes)
                    </div>
                    <div class="col col-2 btn-group-sm rounded-0 text-center">
                        <div class="btn btn-sm btn-light rounded-0">
                            @{
                                if (item.IsEquipped)
                                {
                                    @Html.ActionLink("Unequip", "Unequip", new { id = item.CharacterItemID, characterID = Model.CharacterID }, new { @class = "text-decoration-none text-dark small-font" })
                                }
                                if (!item.IsEquipped)
                                {
                                    @Html.ActionLink("Equip", "Equip", new { id = item.CharacterItemID, characterID = Model.CharacterID }, new { @class = "text-decoration-none text-dark small-font" })
                                }
                            }
                        </div>
                        <div class="btn btn-sm btn-light rounded-0">
                            @Html.ActionLink("Delete", "Delete", new { characterID = Model.CharacterID, characterItemID = item.CharacterItemID }, new { @class = "text-decoration-none text-dark small-font" })
                        </div>
                    </div>

                </div>
            }
        }

    </div>

</div>

<div class="mt-4 mb-1">
    <div class="btn-group btn-group-sm ">
        <div class="btn btn-outline-dark btn-sm rounded-0 bg-light">
            @Html.ActionLink("Add Items", "AddItems", new { id = Model.CharacterID }, new { @class = " text-decoration-none text-dark lead" })
        </div>
        <div class="btn btn-outline-dark btn-sm rounded-0 bg-light">
            @Html.ActionLink("Edit Character", "Edit", "Character", new { id = Model.CharacterID }, new { @class = "text-decoration-none text-dark lead" })
        </div>
        <div class="btn btn-outline-dark btn-sm rounded-0 bg-light">
            @Html.ActionLink("Back to Character List", "Index", "Character", "", new { @class = "text-decoration-none text-dark lead" })
        </div>
    </div>
</div>